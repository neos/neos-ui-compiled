{"version":3,"sources":["webpack:///JavaScript/Guest.js","webpack:///./node_modules/lodash.debounce/index.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/index.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/guestFrameApi.js","webpack:///./node_modules/lodash.throttle/index.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/ckeditor/removeTags.js"],"names":["webpackJsonp","104","module","exports","__webpack_require__","global","debounce","func","wait","options","invokeFunc","time","args","lastArgs","thisArg","lastThis","undefined","lastInvokeTime","result","apply","leadingEdge","timerId","setTimeout","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","clearTimeout","flush","debounced","isInvoking","arguments","this","TypeError","FUNC_ERROR_TEXT","toNumber","isObject","nativeMax","value","type","isObjectLike","isSymbol","objectToString","call","symbolTag","NAN","other","valueOf","replace","reTrim","isBinary","reIsBinary","test","reIsOctal","freeParseInt","slice","reIsBadHex","parseInt","freeGlobal","Object","freeSelf","self","root","Function","objectProto","prototype","toString","Math","max","min","Date","1487","1668","_guestFrameApi","_guestFrameApi2","_interopRequireDefault","obj","__esModule","default","defineProperty","window","enumerable","writable","configurable","1669","_lodash","_lodash2","_lodash3","_lodash4","_removeTags","_removeTags2","noop","initialize","toggleFormat","createEditor","lastFormattingUnderCursorSerialized","createCKEditorAPI","CKEDITOR","console","error","editorConfig","currentEditor","handleUserInteractionCallbackFactory","editor","formattingUnderCursor","keys","formattingRules","forEach","key","formattingRule","command","getCommand","state","style","elementPath","checkActive","extractCurrentFormatFn","Error","formattingUnderCursorSerialized","JSON","stringify","setFormattingUnderCursor","disableAutoInline","assign","dtd","$editable","b","big","i","small","tt","abbr","acronym","cite","code","dfn","em","kbd","strong","samp","var","a","bdo","img","q","span","sub","sup","button","label","_editorConfig","values","plugins","plugin","initFn","formatting","formattingOptions","length","warn","execCommand","fire","operation","applyStyleFn","dom","finalOptions","propertyName","onChange","_this","$inline","tagName","toLowerCase","childNodes","some","childNode","$block","onClickRemoveTags","text","innerHTML","removeEventListener","addEventListener","contentEditable","inline","on","config","buttons","editorFeature","ui","create","addFeature","handleUserInteraction","event","editable","contextEvent","contains","once","setCurrentlyEditedPropertyName","getData","256","throttle","293","filterRules","filter","fragment","htmlParser","fromHtml","writer","basicWriter","applyTo","writeHtml","getHtml"],"mappings":"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","file":"JavaScript/Guest.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 104:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33)))\n\n/***/ }),\n\n/***/ 1487:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(624);\nmodule.exports = __webpack_require__(1668);\n\n\n/***/ }),\n\n/***/ 1668:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _guestFrameApi = __webpack_require__(1669);\n\nvar _guestFrameApi2 = _interopRequireDefault(_guestFrameApi);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(window, 'NeosCKEditorApi', {\n    value: _guestFrameApi2.default,\n    enumerable: false,\n    writable: false,\n    configurable: true\n});\n\n/***/ }),\n\n/***/ 1669:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lodash = __webpack_require__(256);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _lodash3 = __webpack_require__(104);\n\nvar _lodash4 = _interopRequireDefault(_lodash3);\n\nvar _removeTags = __webpack_require__(293);\n\nvar _removeTags2 = _interopRequireDefault(_removeTags);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar noop = {\n    initialize: function initialize() {},\n    toggleFormat: function toggleFormat() {},\n    createEditor: function createEditor() {}\n};\n\n// We cache the \"formattingUnderCursor\"; to only emit events when it really changed.\n// As there is only a single cursor active at any given time, it is safe to do this caching here inside the singleton object.\nvar lastFormattingUnderCursorSerialized = '';\n\nvar createCKEditorAPI = function createCKEditorAPI(CKEDITOR) {\n    if (!CKEDITOR) {\n        console.error('CKEditor not found!');\n\n        //\n        // Return noop to not break things\n        //\n        return noop;\n    }\n\n    // An object with the following keys:\n    // - globalRegistry\n    // - setFormattingUnderCursor\n    // - setCurrentlyEditedPropertyName\n    var editorConfig = null;\n    var currentEditor = null;\n\n    var handleUserInteractionCallbackFactory = function handleUserInteractionCallbackFactory(editor) {\n        return function () {\n            var formattingUnderCursor = {};\n            Object.keys(editorConfig.formattingRules).forEach(function (key) {\n                var formattingRule = editorConfig.formattingRules[key];\n\n                if (formattingRule.command !== undefined) {\n                    if (!editor.getCommand(formattingRule.command)) {\n                        formattingUnderCursor[key] = false;\n                        return;\n                    }\n\n                    formattingUnderCursor[key] = editor.getCommand(formattingRule.command).state;\n                    return;\n                }\n\n                if (formattingRule.style !== undefined) {\n                    if (!editor.elementPath()) {\n                        formattingUnderCursor[key] = false;\n                        return;\n                    }\n\n                    var style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n\n                    formattingUnderCursor[key] = style.checkActive(editor.elementPath(), editor);\n                    return;\n                }\n\n                if (formattingRule.extractCurrentFormatFn) {\n                    formattingUnderCursor[key] = formattingRule.extractCurrentFormatFn(editor, CKEDITOR);\n                    return;\n                }\n\n                throw new Error('\\n                An error occured while checking a format in CK Editor.\\n                The description parameter needs to either have a key \"command\",\\n                a key \"style\", or a style \"extractCurrentFormatFn\" - none of which could be found.\\n            ');\n            });\n\n            var formattingUnderCursorSerialized = JSON.stringify(formattingUnderCursor);\n            if (formattingUnderCursorSerialized !== lastFormattingUnderCursorSerialized) {\n                editorConfig.setFormattingUnderCursor(formattingUnderCursor);\n                lastFormattingUnderCursorSerialized = formattingUnderCursorSerialized;\n            }\n        };\n    };\n\n    //\n    // Perform global initialization tasks\n    //\n    CKEDITOR.disableAutoInline = true;\n\n    //\n    // Workaround as per http://stackoverflow.com/questions/14575036/enable-ckeditor4-inline-on-span-and-other-inline-tags\n    // The issue won't be fixed, we have to live with this...\n    //\n    Object.assign(CKEDITOR.dtd.$editable, {\n        b: true,\n        big: true,\n        i: true,\n        small: true,\n        tt: true,\n        abbr: true,\n        acronym: true,\n        cite: true,\n        code: true,\n        dfn: true,\n        em: true,\n        kbd: true,\n        strong: true,\n        samp: true,\n        var: true,\n        a: true,\n        bdo: true,\n        img: true,\n        q: true,\n        span: true,\n        sub: true,\n        sup: true,\n        button: true,\n        label: true\n    });\n\n    // Public (singleton) API for CK editor\n    return {\n        initialize: function initialize(_editorConfig) {\n            editorConfig = _editorConfig;\n            Object.values(editorConfig.plugins).forEach(function (plugin) {\n                plugin.initFn(CKEDITOR);\n            });\n        },\n        toggleFormat: function toggleFormat(formatting) {\n            var formattingOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            var formattingRule = editorConfig.formattingRules[formatting];\n            if (!formattingRule) {\n                console.warn('Formatting instruction ' + formatting + ' not found.');\n                return;\n            }\n            if (!currentEditor) {\n                console.warn('Current editor not found!');\n                return;\n            }\n            if (formattingRule.command !== undefined) {\n                if (!currentEditor.getCommand(formattingRule.command)) {\n                    console.warn('Command ' + currentEditor + ' not found.');\n                    return;\n                }\n\n                currentEditor.execCommand(formattingRule.command);\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            if (formattingRule.style !== undefined) {\n                if (!currentEditor.elementPath()) {\n                    return;\n                }\n\n                var style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n                var operation = style.checkActive(currentEditor.elementPath(), currentEditor) ? 'removeStyle' : 'applyStyle';\n\n                currentEditor[operation](style);\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            if (formattingRule.applyStyleFn) {\n                formattingRule.applyStyleFn(formattingOptions, currentEditor, CKEDITOR);\n\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            throw new Error('\\n                An error occured while applying a format in CK Editor.\\n                The description parameter needs to either have a key \"command\",\\n                \"style\", or \"applyFn\" - none of which could be found.\\n            ');\n        },\n        createEditor: function createEditor(dom, finalOptions, propertyName, onChange) {\n            var _this = this;\n\n            if (CKEDITOR.dtd.$inline[dom.tagName.toLowerCase()]) {\n                // If we are an inline element, CKEditor breaks if we contain block-level children\n                var containsBlockLevelChildren = [].slice.call(dom.childNodes).some(function (childNode) {\n                    return childNode.tagName && CKEDITOR.dtd.$block[childNode.tagName.toLowerCase()];\n                });\n                if (containsBlockLevelChildren) {\n                    console.warn('The editable ', dom, ' of type <', dom.tagName.toLowerCase(), '> (which is an inline html element) contains block-level children (like p, div, ...). This is invalid markup and currently not supported by CKEditor; that is why we cannot edit it currently.');\n\n                    var onClickRemoveTags = function onClickRemoveTags() {\n                        var text = (0, _removeTags2.default)(dom.innerHTML, CKEDITOR);\n                        dom.innerHTML = text;\n                        _this.createEditor(dom, finalOptions, propertyName, onChange);\n\n                        dom.removeEventListener('click', onClickRemoveTags);\n                        // TODO FOCUS EDITOR directly - would be nice!\n                    };\n\n                    dom.addEventListener('click', onClickRemoveTags);\n                    return;\n                }\n            }\n            dom.contentEditable = 'true';\n\n            var editor = CKEDITOR.inline(dom, finalOptions);\n\n            editor.on('loaded', function () {\n                if (editor.config.buttons) {\n                    editor.config.buttons.forEach(function (button) {\n                        // The next two lines actually do the ACF auto-configuration\n                        var editorFeature = editor.ui.create(button);\n                        editor.addFeature(editorFeature);\n                    });\n                }\n            });\n\n            var handleUserInteraction = handleUserInteractionCallbackFactory(editor);\n\n            editor.on('contentDom', function (event) {\n                event.editor.editable().on('contextmenu', function (contextEvent) {\n                    var path = event.editor.elementPath();\n\n                    if (!path.contains('table')) {\n                        contextEvent.cancel();\n                    }\n                }, null, null, 5);\n            });\n\n            editor.once('contentDom', function () {\n                editor.on('focus', function () {\n                    currentEditor = editor;\n                    editorConfig.setCurrentlyEditedPropertyName(propertyName);\n\n                    handleUserInteraction();\n                });\n\n                editor.on('selectionChange', function () {\n                    handleUserInteraction();\n                });\n\n                editor.on('change', (0, _lodash4.default)((0, _lodash2.default)(function () {\n                    return onChange(editor.getData());\n                }, 1500), 150));\n            });\n        }\n    };\n};\n\nexports.default = createCKEditorAPI(window.CKEDITOR);\n\n/***/ }),\n\n/***/ 256:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33)))\n\n/***/ }),\n\n/***/ 293:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/* eslint babel/new-cap: 0 */\nexports.default = function (text, CKEDITOR) {\n    // 2) apply content filtering *with an empty filter rule set*; this will strip out:\n    //    - all attributes\n    //    - most tags (such as \"b\")\n    // For some reason, it does not strip out <p> Tags; not sure why...\n    var filterRules = {};\n    var filter = new CKEDITOR.filter(filterRules);\n    var fragment = CKEDITOR.htmlParser.fragment.fromHtml(text);\n    var writer = new CKEDITOR.htmlParser.basicWriter();\n    filter.applyTo(fragment);\n    fragment.writeHtml(writer);\n    text = writer.getHtml();\n\n    // 3) that's why we finally remove all remaining (opening and closing) tags with a regex.\n    return text.replace(/<\\/?[a-z0-9A-Z]+[^>]*>/g, '');\n};\n\n/***/ })\n\n},[1487]);\n\n\n// WEBPACK FOOTER //\n// JavaScript/Guest.js","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.debounce/index.js\n// module id = 104\n// module chunks = 0 1","import guestFrameApi from './guestFrameApi';\n\nObject.defineProperty(window, 'NeosCKEditorApi', {\n    value: guestFrameApi,\n    enumerable: false,\n    writable: false,\n    configurable: true\n});\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/index.js","import throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport removeTags from './ckeditor/removeTags';\n\nconst noop = {\n    initialize() {},\n    toggleFormat() {},\n    createEditor() {}\n};\n\n// We cache the \"formattingUnderCursor\"; to only emit events when it really changed.\n// As there is only a single cursor active at any given time, it is safe to do this caching here inside the singleton object.\nlet lastFormattingUnderCursorSerialized = '';\n\nconst createCKEditorAPI = CKEDITOR => {\n    if (!CKEDITOR) {\n        console.error('CKEditor not found!');\n\n        //\n        // Return noop to not break things\n        //\n        return noop;\n    }\n\n    // An object with the following keys:\n    // - globalRegistry\n    // - setFormattingUnderCursor\n    // - setCurrentlyEditedPropertyName\n    let editorConfig = null;\n    let currentEditor = null;\n\n    const handleUserInteractionCallbackFactory = editor => () => {\n        const formattingUnderCursor = {};\n        Object.keys(editorConfig.formattingRules).forEach(key => {\n            const formattingRule = editorConfig.formattingRules[key];\n\n            if (formattingRule.command !== undefined) {\n                if (!editor.getCommand(formattingRule.command)) {\n                    formattingUnderCursor[key] = false;\n                    return;\n                }\n\n                formattingUnderCursor[key] = editor.getCommand(formattingRule.command).state;\n                return;\n            }\n\n            if (formattingRule.style !== undefined) {\n                if (!editor.elementPath()) {\n                    formattingUnderCursor[key] = false;\n                    return;\n                }\n\n                const style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n\n                formattingUnderCursor[key] = style.checkActive(editor.elementPath(), editor);\n                return;\n            }\n\n            if (formattingRule.extractCurrentFormatFn) {\n                formattingUnderCursor[key] = formattingRule.extractCurrentFormatFn(editor, CKEDITOR);\n                return;\n            }\n\n            throw new Error(`\n                An error occured while checking a format in CK Editor.\n                The description parameter needs to either have a key \"command\",\n                a key \"style\", or a style \"extractCurrentFormatFn\" - none of which could be found.\n            `);\n        });\n\n        const formattingUnderCursorSerialized = JSON.stringify(formattingUnderCursor);\n        if (formattingUnderCursorSerialized !== lastFormattingUnderCursorSerialized) {\n            editorConfig.setFormattingUnderCursor(formattingUnderCursor);\n            lastFormattingUnderCursorSerialized = formattingUnderCursorSerialized;\n        }\n    };\n\n    //\n    // Perform global initialization tasks\n    //\n    CKEDITOR.disableAutoInline = true;\n\n    //\n    // Workaround as per http://stackoverflow.com/questions/14575036/enable-ckeditor4-inline-on-span-and-other-inline-tags\n    // The issue won't be fixed, we have to live with this...\n    //\n    Object.assign(CKEDITOR.dtd.$editable, {\n        b: true,\n        big: true,\n        i: true,\n        small: true,\n        tt: true,\n        abbr: true,\n        acronym: true,\n        cite: true,\n        code: true,\n        dfn: true,\n        em: true,\n        kbd: true,\n        strong: true,\n        samp: true,\n        var: true,\n        a: true,\n        bdo: true,\n        img: true,\n        q: true,\n        span: true,\n        sub: true,\n        sup: true,\n        button: true,\n        label: true\n    });\n\n    // Public (singleton) API for CK editor\n    return {\n        initialize(_editorConfig) {\n            editorConfig = _editorConfig;\n            Object.values(editorConfig.plugins).forEach(plugin => {\n                plugin.initFn(CKEDITOR);\n            });\n        },\n\n        toggleFormat(formatting, formattingOptions = {}) {\n            const formattingRule = editorConfig.formattingRules[formatting];\n            if (!formattingRule) {\n                console.warn(`Formatting instruction ${formatting} not found.`);\n                return;\n            }\n            if (!currentEditor) {\n                console.warn('Current editor not found!');\n                return;\n            }\n            if (formattingRule.command !== undefined) {\n                if (!currentEditor.getCommand(formattingRule.command)) {\n                    console.warn(`Command ${currentEditor} not found.`);\n                    return;\n                }\n\n                currentEditor.execCommand(formattingRule.command);\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            if (formattingRule.style !== undefined) {\n                if (!currentEditor.elementPath()) {\n                    return;\n                }\n\n                const style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n                const operation = style.checkActive(currentEditor.elementPath(), currentEditor) ?\n                    'removeStyle' : 'applyStyle';\n\n                currentEditor[operation](style);\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            if (formattingRule.applyStyleFn) {\n                formattingRule.applyStyleFn(formattingOptions, currentEditor, CKEDITOR);\n\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            throw new Error(`\n                An error occured while applying a format in CK Editor.\n                The description parameter needs to either have a key \"command\",\n                \"style\", or \"applyFn\" - none of which could be found.\n            `);\n        },\n\n        createEditor(dom, finalOptions, propertyName, onChange) {\n            if (CKEDITOR.dtd.$inline[dom.tagName.toLowerCase()]) {\n                // If we are an inline element, CKEditor breaks if we contain block-level children\n                const containsBlockLevelChildren = [].slice.call(dom.childNodes).some(childNode => childNode.tagName && CKEDITOR.dtd.$block[childNode.tagName.toLowerCase()]);\n                if (containsBlockLevelChildren) {\n                    console.warn('The editable ', dom, ' of type <', dom.tagName.toLowerCase(), '> (which is an inline html element) contains block-level children (like p, div, ...). This is invalid markup and currently not supported by CKEditor; that is why we cannot edit it currently.');\n\n                    const onClickRemoveTags = () => {\n                        const text = removeTags(dom.innerHTML, CKEDITOR);\n                        dom.innerHTML = text;\n                        this.createEditor(dom, finalOptions, propertyName, onChange);\n\n                        dom.removeEventListener('click', onClickRemoveTags);\n                        // TODO FOCUS EDITOR directly - would be nice!\n                    };\n\n                    dom.addEventListener('click', onClickRemoveTags);\n                    return;\n                }\n            }\n            dom.contentEditable = 'true';\n\n            const editor = CKEDITOR.inline(dom, finalOptions);\n\n            editor.on('loaded', () => {\n                if (editor.config.buttons) {\n                    editor.config.buttons.forEach(button => {\n                        // The next two lines actually do the ACF auto-configuration\n                        const editorFeature = editor.ui.create(button);\n                        editor.addFeature(editorFeature);\n                    });\n                }\n            });\n\n            const handleUserInteraction = handleUserInteractionCallbackFactory(editor);\n\n            editor.on('contentDom', event => {\n                event.editor.editable().on('contextmenu', contextEvent => {\n                    const path = event.editor.elementPath();\n\n                    if (!path.contains('table')) {\n                        contextEvent.cancel();\n                    }\n                }, null, null, 5);\n            });\n\n            editor.once('contentDom', () => {\n                editor.on('focus', () => {\n                    currentEditor = editor;\n                    editorConfig.setCurrentlyEditedPropertyName(propertyName);\n\n                    handleUserInteraction();\n                });\n\n                editor.on('selectionChange', () => {\n                    handleUserInteraction();\n                });\n\n                editor.on('change', debounce(throttle(() => onChange(editor.getData()), 1500), 150));\n            });\n        }\n    };\n};\n\nexport default createCKEditorAPI(window.CKEDITOR);\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/guestFrameApi.js","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.throttle/index.js\n// module id = 256\n// module chunks = 0 1","/* eslint babel/new-cap: 0 */\nexport default (text, CKEDITOR) => {\n    // 2) apply content filtering *with an empty filter rule set*; this will strip out:\n    //    - all attributes\n    //    - most tags (such as \"b\")\n    // For some reason, it does not strip out <p> Tags; not sure why...\n    const filterRules = {};\n    const filter = new CKEDITOR.filter(filterRules);\n    const fragment = CKEDITOR.htmlParser.fragment.fromHtml(text);\n    const writer = new CKEDITOR.htmlParser.basicWriter();\n    filter.applyTo(fragment);\n    fragment.writeHtml(writer);\n    text = writer.getHtml();\n\n    // 3) that's why we finally remove all remaining (opening and closing) tags with a regex.\n    return text.replace(/<\\/?[a-z0-9A-Z]+[^>]*>/g, '');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/ckeditor/removeTags.js"],"sourceRoot":""}